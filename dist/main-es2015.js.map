{"version":3,"sources":["./src/$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/modules/ravepayment/ravepayment.component.html","./src/app/modules/ravepayment/ravepayment.component.ts","./src/app/modules/ravepayment/ravepayment.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","<rave-pay-button\n    [text]=\"'Pay me,my money'\"\n    [className]=\"'paymentbtn'\"\n    (callback)=\"confirmPayment($event)\"\n    (close)=\"cancelledPayment()\"\n    (getNewReference)=\"getNewReference()\"\n    [key]=\"'FLWPUBK-xxxxxxxxxxxxxxxxxxxxxxxx-X'\"\n    [reference]=\"reference\"\n    [amount]=\"10000\"\n    [email]=\"'FooBar@rave.com'\"\n></rave-pay-button >","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  reference: string;\n  ngOnInit() {\n    this.reference = this.generateReference();\n  }\n\n  confirmPayment(response: object): void {\n    console.log(response);\n  }\n\n  cancelledPayment(): void {\n  }\n\n  generateReference(): string {\n      let text = '';\n      const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n      for (let i = 0; i < 10; i++) {\n          text += possible.charAt(Math.floor(Math.random() * possible.length));\n      }\n\n      return text;\n  }\n\n  getNewReference() {\n    this.reference = this.generateReference();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n\nimport { AppComponent } from './app.component';\nimport { RavepaymentModule } from './modules/ravepayment/ravepayment.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    RavepaymentModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<button\n    class=\"paystack-pay-button\"\n    [ngStyle]=\"style\"\n    [ngClass]=\"className\"\n    (click)=\"madePayment()\">\n        {{text || 'Pay'}}\n</button>","import {Component, Input, OnInit, EventEmitter, Output, ChangeDetectionStrategy} from '@angular/core';\n\ninterface IRaveOptions {\n    PBFPubKey: string;\n    txref: string;\n    amount: number;\n    currency: string;\n    country: string;\n    customer_email: string;\n    customer_firstname: string;\n    customer_lastname: string;\n    customer_phone: string;\n    custom_title: string;\n    custom_description: string;\n    custom_logo: string;\n    redirect_url: string;\n    meta ?: any;\n    callback: (response: object) => void;\n    onclose: () => void;\n}\n\ninterface MyWindow extends Window {\n    getpaidSetup: (options: IRaveOptions) => void;\n}\ndeclare let window: MyWindow\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'rave-pay-button',\n  templateUrl: './ravepayment.component.html',\n  styleUrls: ['./ravepayment.component.css']\n})\n\nexport class RavepaymentComponent implements OnInit {\n    @Input() text: string;\n    @Input() style: object;\n    @Input() className: string;\n    @Output() callback = new EventEmitter<object>();\n    @Output() close = new EventEmitter();\n    @Output() getNewReference = new EventEmitter();\n    @Input() key: string;\n    @Input() email: string;\n    @Input() amount: number;\n    @Input() reference: string;\n    @Input() meta: any;\n    @Input() currency: string;\n    @Input() country: string;\n    @Input() customer_firstname: string;\n    @Input() customer_lastname: string;\n    @Input() customer_phone: string;\n    @Input() custom_title: string;\n    @Input() custom_description: string;\n    @Input() custom_logo: string;\n    @Input() redirect_url: string;\n    \n\n    private raveOptions: IRaveOptions;\n\n\n    constructor() {}\n    ngOnInit() {}\n\n    madePayment() {\n        this.prepRaveOptions();\n        window.getpaidSetup(this.raveOptions);\n        this.getNewReference.emit();\n    }\n\n    prepRaveOptions(): void {\n        this.raveOptions = {\n            PBFPubKey: this.key,\n            txref: this.reference,\n            amount: this.amount,\n            customer_email: this.email,\n            onclose: () => this.close.emit(),\n            callback: (response: object) => this.callback.emit(response),\n            currency: this.currency || 'NGN',\n            country: this.country || 'NG',\n            customer_firstname: this.customer_firstname || '',\n            customer_lastname: this.customer_lastname || '',\n            customer_phone: this.customer_phone || '',\n            custom_title: this.custom_title || '',\n            custom_description: this.custom_description || '',\n            custom_logo: this.custom_logo || '',\n            redirect_url: this.redirect_url || '',\n            meta: this.meta || {}\n        };\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {RavepaymentComponent } from './ravepayment.component';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        RavepaymentComponent\n    ],\n    exports: [\n        RavepaymentComponent\n    ]\n})\n\nexport class RavepaymentModule { }","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":"webpack:///"}